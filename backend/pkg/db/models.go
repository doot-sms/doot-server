// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type UserSenderReqsRequestor string

const (
	UserSenderReqsRequestorUser   UserSenderReqsRequestor = "user"
	UserSenderReqsRequestorSender UserSenderReqsRequestor = "sender"
)

func (e *UserSenderReqsRequestor) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserSenderReqsRequestor(s)
	case string:
		*e = UserSenderReqsRequestor(s)
	default:
		return fmt.Errorf("unsupported scan type for UserSenderReqsRequestor: %T", src)
	}
	return nil
}

type NullUserSenderReqsRequestor struct {
	UserSenderReqsRequestor UserSenderReqsRequestor
	Valid                   bool // Valid is true if UserSenderReqsRequestor is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUserSenderReqsRequestor) Scan(value interface{}) error {
	if value == nil {
		ns.UserSenderReqsRequestor, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UserSenderReqsRequestor.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUserSenderReqsRequestor) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UserSenderReqsRequestor), nil
}

type UserSenderReqsStatus string

const (
	UserSenderReqsStatusRequested UserSenderReqsStatus = "requested"
	UserSenderReqsStatusAccepted  UserSenderReqsStatus = "accepted"
	UserSenderReqsStatusRejected  UserSenderReqsStatus = "rejected"
)

func (e *UserSenderReqsStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserSenderReqsStatus(s)
	case string:
		*e = UserSenderReqsStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for UserSenderReqsStatus: %T", src)
	}
	return nil
}

type NullUserSenderReqsStatus struct {
	UserSenderReqsStatus UserSenderReqsStatus
	Valid                bool // Valid is true if UserSenderReqsStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUserSenderReqsStatus) Scan(value interface{}) error {
	if value == nil {
		ns.UserSenderReqsStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UserSenderReqsStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUserSenderReqsStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UserSenderReqsStatus), nil
}

type Batch struct {
	ID        int32
	QueuedAt  time.Time
	CreatedAt time.Time
	UpdatedAt time.Time
}

type Message struct {
	ID        int32
	ToAddress string
	Content   string
	BatchID   int32
	SentAt    sql.NullTime
	CreatedAt time.Time
	UpdatedAt time.Time
	UserID    int32
	SenderID  int32
}

type Sender struct {
	ID        int32
	UserID    int32
	DeviceID  string
	CreatedAt time.Time
	UpdatedAt time.Time
}

type User struct {
	ID        int32
	Email     string
	Password  string
	CreatedAt time.Time
	UpdatedAt time.Time
}

type UserApiKey struct {
	ApiKey       string
	User         int32
	ApiSecret    string
	Expiresafter sql.NullTime
	CreatedAt    time.Time
	UpdatedAt    time.Time
}

type UserSender struct {
	UserID    int32
	SenderID  int32
	CreatedAt time.Time
	UpdatedAt time.Time
}

type UserSenderReq struct {
	ID        int32
	UserID    int32
	SenderID  int32
	Requestor UserSenderReqsRequestor
	Status    UserSenderReqsStatus
	CreatedAt time.Time
	UpdatedAt time.Time
}
